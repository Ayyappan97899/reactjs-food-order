{"ast":null,"code":"var _jsxFileName = \"G:\\\\React project\\\\food-order\\\\src\\\\Context\\\\Cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcontext = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatetotalamount = state.totalAmount + action.items.price * action.items.amount;\n    const existingItem = state.items.findIndex(ele => {\n      return ele.id === action.id;\n    });\n    const updateItems = state.items.concat(action.items);\n    return {\n      items: updateItems,\n      totalAmount: updatetotalamount\n    };\n  }\n\n  return defaultcontext;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartitems, dispatchcart] = useReducer(cartReducer, defaultcontext);\n  console.log(cartitems);\n\n  const additemHandler = items => {\n    dispatchcart({\n      type: \"ADD\",\n      items: items\n    });\n  };\n\n  const removeitemHandler = id => {\n    dispatchcart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartcontext = {\n    items: cartitems.items,\n    totalAmount: cartitems.totalAmount,\n    addItem: additemHandler,\n    removeItem: removeitemHandler\n  };\n  console.log(cartcontext);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartcontext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"zq1KTM9cWK3YngX+VWQR7ks/pR8=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["G:/React project/food-order/src/Context/Cart-provider.js"],"names":["React","useReducer","CartContext","defaultcontext","items","totalAmount","cartReducer","state","action","type","updatetotalamount","price","amount","existingItem","findIndex","ele","id","updateItems","concat","CartProvider","props","cartitems","dispatchcart","console","log","additemHandler","removeitemHandler","cartcontext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAvB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,iBAAiB,GACrBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,KAAP,CAAaO,KAAb,GAAqBH,MAAM,CAACJ,KAAP,CAAaQ,MADxD;AAEA,UAAMC,YAAY,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CAAuBC,GAAD,IAAS;AAClD,aAAOA,GAAG,CAACC,EAAJ,KAAWR,MAAM,CAACQ,EAAzB;AACD,KAFoB,CAArB;AAGA,UAAMC,WAAW,GAAGV,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACJ,KAA1B,CAApB;AACA,WAAO;AAAEA,MAAAA,KAAK,EAAEa,WAAT;AAAsBZ,MAAAA,WAAW,EAAEK;AAAnC,KAAP;AACD;;AACD,SAAOP,cAAP;AACD,CAXD;;AAaA,MAAMgB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,UAAU,CAACK,WAAD,EAAcH,cAAd,CAA5C;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAMI,cAAc,GAAIrB,KAAD,IAAW;AAChCkB,IAAAA,YAAY,CAAC;AAAEb,MAAAA,IAAI,EAAE,KAAR;AAAeL,MAAAA,KAAK,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMsB,iBAAiB,GAAIV,EAAD,IAAQ;AAChCM,IAAAA,YAAY,CAAC;AAAEb,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMW,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADC;AAElBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEH,cAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,WAA7B;AAAA,cACGP,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMX,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./Cart-Context\";\r\n\r\nconst defaultcontext = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatetotalamount =\r\n      state.totalAmount + action.items.price * action.items.amount;\r\n    const existingItem = state.items.findIndex((ele) => {\r\n      return ele.id === action.id;\r\n    });\r\n    const updateItems = state.items.concat(action.items);\r\n    return { items: updateItems, totalAmount: updatetotalamount };\r\n  }\r\n  return defaultcontext;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartitems, dispatchcart] = useReducer(cartReducer, defaultcontext);\r\n  console.log(cartitems);\r\n  const additemHandler = (items) => {\r\n    dispatchcart({ type: \"ADD\", items: items });\r\n  };\r\n\r\n  const removeitemHandler = (id) => {\r\n    dispatchcart({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartcontext = {\r\n    items: cartitems.items,\r\n    totalAmount: cartitems.totalAmount,\r\n    addItem: additemHandler,\r\n    removeItem: removeitemHandler,\r\n  };\r\n\r\n  console.log(cartcontext);\r\n  return (\r\n    <CartContext.Provider value={cartcontext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}