{"ast":null,"code":"var _jsxFileName = \"G:\\\\React project\\\\food-order\\\\src\\\\Components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport styles from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport CartContext from \"../../Context/Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  // const [ordershow, setordershow] = useState(false);\n  const context = useContext(CartContext);\n  const TotalAmount = `$${context.totalAmount.toFixed(2)}`;\n  const itemvalid = context.items.length > 0;\n\n  const closeHandler = () => {\n    props.setmodal(false);\n  };\n\n  if (context.items.length > 0) {\n    setordershow(true);\n  }\n\n  const orderHandler = () => {\n    console.log(\"ordered\");\n  };\n\n  const RemoveHandler = id => {};\n\n  const AddHandler = item => {}; // const cartitems = (\n  //   <ul className={styles[\"cart-items\"]}>\n  //     {context.items.map((item) => {\n  //       return (\n  //         <CartItem\n  //           key={item.id}\n  //           name={item.name}\n  //           price={item.price}\n  //           amount={item.amount}\n  //           onRemove={RemoveHandler.bind(null, item.id)}\n  //           onAdd={AddHandler.bind(null, item)}\n  //         />\n  //       );\n  //     })}\n  //   </ul>\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    setmod: props.setmodal,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles[\"cart-items\"],\n      children: context.items.map(item => {\n        return /*#__PURE__*/_jsxDEV(CartItem, {\n          name: item.name,\n          price: item.price,\n          amount: item.amount,\n          onRemove: RemoveHandler.bind(null, item.id),\n          onAdd: AddHandler.bind(null, item)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: TotalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"button--alt\"],\n        onClick: closeHandler,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), itemvalid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["G:/React project/food-order/src/Components/Cart/Cart.js"],"names":["React","useContext","styles","Modal","CartItem","CartContext","Cart","props","context","TotalAmount","totalAmount","toFixed","itemvalid","items","length","closeHandler","setmodal","setordershow","orderHandler","console","log","RemoveHandler","id","AddHandler","item","map","name","price","amount","bind","total","actions","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACI,WAAD,CAA1B;AACA,QAAMI,WAAW,GAAI,IAAGD,OAAO,CAACE,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,SAAS,GAAGJ,OAAO,CAACK,KAAR,CAAcC,MAAd,GAAuB,CAAzC;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBR,IAAAA,KAAK,CAACS,QAAN,CAAe,KAAf;AACD,GAFD;;AAIA,MAAIR,OAAO,CAACK,KAAR,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,EAAD,IAAQ,CAAE,CAAhC;;AAEA,QAAMC,UAAU,GAAIC,IAAD,IAAU,CAAE,CAA/B,CAnBsB,CAoBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEjB,KAAK,CAACS,QAArB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEd,MAAM,CAAC,YAAD,CAArB;AAAA,gBACGM,OAAO,CAACK,KAAR,CAAcY,GAAd,CAAmBD,IAAD,IAAU;AAC3B,4BACE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEA,IAAI,CAACE,IAFb;AAGE,UAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,UAAA,MAAM,EAAEH,IAAI,CAACI,MAJf;AAKE,UAAA,QAAQ,EAAEP,aAAa,CAACQ,IAAd,CAAmB,IAAnB,EAAyBL,IAAI,CAACF,EAA9B,CALZ;AAME,UAAA,KAAK,EAAEC,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsBL,IAAtB;AANT,WACOA,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAEpB,MAAM,CAAC4B,KAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOrB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAmBE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAAC6B,OAAvB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE7B,MAAM,CAAC,aAAD,CAAzB;AAA0C,QAAA,OAAO,EAAEa,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGH,SAAS,iBACR;AAAQ,QAAA,SAAS,EAAEV,MAAM,CAAC8B,MAA1B;AAAkC,QAAA,OAAO,EAAEd,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArED;;GAAMZ,I;;KAAAA,I;AAuEN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport styles from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport CartContext from \"../../Context/Cart-Context\";\r\n\r\nconst Cart = (props) => {\r\n  // const [ordershow, setordershow] = useState(false);\r\n  const context = useContext(CartContext);\r\n  const TotalAmount = `$${context.totalAmount.toFixed(2)}`;\r\n  const itemvalid = context.items.length > 0;\r\n  const closeHandler = () => {\r\n    props.setmodal(false);\r\n  };\r\n\r\n  if (context.items.length > 0) {\r\n    setordershow(true);\r\n  }\r\n\r\n  const orderHandler = () => {\r\n    console.log(\"ordered\");\r\n  };\r\n\r\n  const RemoveHandler = (id) => {};\r\n\r\n  const AddHandler = (item) => {};\r\n  // const cartitems = (\r\n  //   <ul className={styles[\"cart-items\"]}>\r\n  //     {context.items.map((item) => {\r\n  //       return (\r\n  //         <CartItem\r\n  //           key={item.id}\r\n  //           name={item.name}\r\n  //           price={item.price}\r\n  //           amount={item.amount}\r\n  //           onRemove={RemoveHandler.bind(null, item.id)}\r\n  //           onAdd={AddHandler.bind(null, item)}\r\n  //         />\r\n  //       );\r\n  //     })}\r\n  //   </ul>\r\n  // );\r\n\r\n  return (\r\n    <Modal setmod={props.setmodal}>\r\n      <ul className={styles[\"cart-items\"]}>\r\n        {context.items.map((item) => {\r\n          return (\r\n            <CartItem\r\n              key={item.id}\r\n              name={item.name}\r\n              price={item.price}\r\n              amount={item.amount}\r\n              onRemove={RemoveHandler.bind(null, item.id)}\r\n              onAdd={AddHandler.bind(null, item)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className={styles.total}>\r\n        <span>Total Amount</span>\r\n        <span>{TotalAmount}</span>\r\n      </div>\r\n      <div className={styles.actions}>\r\n        <button className={styles[\"button--alt\"]} onClick={closeHandler}>\r\n          Close\r\n        </button>\r\n        {itemvalid && (\r\n          <button className={styles.button} onClick={orderHandler}>\r\n            Order\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}